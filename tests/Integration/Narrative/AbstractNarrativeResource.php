<?php


namespace App\Tests\Integration\Narrative;


use App\Entity\Position;
use App\Repository\FictionRepository;
use App\Repository\FragmentRepository;
use App\Repository\NarrativeRepository;
use App\Repository\PositionRepository;
use App\Tests\Integration\AbstractIntegrationTest;
use Doctrine\ORM\EntityManagerInterface;

/**
 * Class AbstractNarrativeResourceTest
 * @package App\Tests\Integration\Narrative
 */
class AbstractNarrativeResource extends AbstractIntegrationTest
{

    /** @var EntityManagerInterface|object|null  */
    protected $em;

    /** @var array  */
    protected $data;

    /** @var string  */
    protected $title;

    /** @var string  */
    protected $content;

    /** @var NarrativeRepository|object|null  */
    protected $narrativeRepository;

    /** @var FragmentRepository|object|null  */
    protected $fragmentRepository;

    /** @var FictionRepository|object|null  */
    protected $fictionRepository;

    public function setUp():void
    {
        parent::setUp();

        $this->content = 'This content is generated by testPostNarrative';

        $this->data = [
            'uuid' => '6153ca18-47a9-4b38-ae72-29e8340060cb',
            'content' => $this->content,
            'fiction_uuid' => '1b7df281-ae2a-40bf-ad6a-ac60409a9ce6',
            'type' => 'narrative',
            'parent_uuid' => 'de88bad6-9e5d-4af4-ba0c-bbe4dbbf82ff'
        ];

        // we use the container for test of Symfony that let us use "private" services
        $container = self::$container;

        $this->em = $container->get(EntityManagerInterface::class);

        // list of repositories
        $this->narrativeRepository = $container->get(NarrativeRepository::class);
        $this->fragmentRepository = $container->get(FragmentRepository::class);
        $this->fictionRepository = $container->get(FictionRepository::class);
    }
}